@page "/reservation"
@rendermode InteractiveServer
@using AspireApp1.Web.Models
@using AspireApp1.Web.Services
@inject ReservationService ReservationService
@inject IHttpContextAccessor HttpContextAccessor

<PageTitle>座位预约</PageTitle>

<h1>座位预约系统</h1>

<p>这个组件用于展示和管理座位预约功能。所有预约信息已存储在PostgreSQL数据库中。</p>

<div class="row">
    <div class="col-md-6">
        <div class="card">
            <div class="card-header">
                可用座位
            </div>
            <div class="card-body">
                <p>当前可用座位：@(seats?.Count(s => !IsReservedToday(s)) ?? 0)个</p>

                <div class="mb-3">
                    <label for="endDate" class="form-label">结束日期 (当前月最后一天:
                        @lastDayOfMonth.ToString("yyyy-MM-dd"))</label>
                    <input type="date" class="form-control" id="endDate" min="@DateTime.Today.ToString("yyyy-MM-dd")"
                        max="@lastDayOfMonth.ToString("yyyy-MM-dd")" @bind="selectedEndDate" />
                </div>

                <button class="btn btn-primary" @onclick="ReserveSeat">预约座位</button>
            </div>
        </div>
    </div>

    <div class="col-md-6">
        <div class="card">
            <div class="card-header">
                我的预约
            </div>
            <div class="card-body">
                @if (userReservations.Count > 0)
                {
                    <ul class="list-group">
                        @foreach (var reservation in userReservations)
                        {
                            <li class="list-group-item d-flex justify-content-between align-items-center">
                                @reservation.ReservationCode
                                <button class="btn btn-sm btn-danger"
                                    @onclick="() => CancelReservation(reservation.Id)">取消</button>
                            </li>
                        }
                    </ul>
                }
                else
                {
                    <p>您还没有预约座位。</p>
                }
            </div>
        </div>
    </div>
</div>

<!-- 座位图部分 -->
<div class="row mt-4">
    <div class="col-12">
        <div class="card">
            <div class="card-header">
                座位图
            </div>
            <div class="card-body">
                <div class="seat-map">
                    @if (seats != null)
                    {
                        @foreach (var seat in seats)
                        {
                            <div class="seat @(IsReservedForSelectedDate(seat) ? "reserved" : "available")"
                                @onclick="() => ToggleSeatReservation(seat)" title="@GetSeatTooltip(seat)">
                                <span>@seat.Id</span>
                            </div>
                        }
                    }
                    else
                    {
                        <p>正在加载座位信息...</p>
                    }
                </div>
                <div class="seat-legend mt-3">
                    <div class="d-flex align-items-center">
                        <div class="seat-sample available"></div>
                        <span class="ms-2">未预约</span>
                    </div>
                    <div class="d-flex align-items-center ms-3">
                        <div class="seat-sample reserved"></div>
                        <span class="ms-2">已预约</span>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .seat-map {
        display: grid;
        grid-template-columns: repeat(5, 1fr);
        gap: 10px;
        margin-bottom: 20px;
    }

    .seat {
        display: flex;
        justify-content: center;
        align-items: center;
        height: 60px;
        border-radius: 5px;
        cursor: pointer;
        transition: all 0.3s;
    }

    .seat.available {
        background-color: #28a745;
        color: white;
    }

    .seat.reserved {
        background-color: #dc3545;
        color: white;
    }

    .seat:hover {
        transform: scale(1.05);
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);
    }

    .seat-legend {
        display: flex;
    }

    .seat-sample {
        width: 20px;
        height: 20px;
        border-radius: 3px;
    }
</style>

@code {
    private List<Seat>? seats;
    private List<Models.Reservation> userReservations = new();
    private string userId = string.Empty;
    private DateTime lastDayOfMonth;
    private DateTime selectedEndDate;

    protected override async Task OnInitializedAsync()
    {
        // 获取或生成用户ID (从Session中获取)
        var session = HttpContextAccessor.HttpContext?.Session;
        userId = session?.GetString("UserId") ?? Guid.NewGuid().ToString();

        if (session != null && string.IsNullOrEmpty(session.GetString("UserId")))
        {
            session.SetString("UserId", userId);
        }

        // 获取当月最后一天
        lastDayOfMonth = ReservationService.GetLastDayOfMonth();
        selectedEndDate = lastDayOfMonth; // 默认设置为当月最后一天

        await LoadDataAsync();
    }

    private async Task LoadDataAsync()
    {
        seats = await ReservationService.GetAllSeatsAsync();
        userReservations = await ReservationService.GetUserReservationsAsync(userId);
    }

    private bool IsReservedToday(Seat seat)
    {
        var today = DateTime.Today;
        return seat.Reservations.Any(r => r.ReservationTime.Date <= today && r.EndTime.Date >= today);
    }

    private bool IsReservedForSelectedDate(Seat seat)
    {
        var today = DateTime.Today;

        return seat.Reservations.Any(r =>
        (r.ReservationTime.Date <= selectedEndDate && r.EndTime.Date >= today) ||
        (r.ReservationTime.Date <= today && r.EndTime.Date >= today));
    }

    private string GetSeatTooltip(Seat seat)
    {
        var overlappingReservation = seat.Reservations.FirstOrDefault(r =>
        r.ReservationTime.Date <= selectedEndDate && r.EndTime.Date >= DateTime.Today);

        return overlappingReservation != null
        ? $"已预约: {overlappingReservation.ReservationCode}"
        : "未预约，点击可预约";
    }

    private async Task ToggleSeatReservation(Seat seat)
    {
        var overlappingReservation = seat.Reservations.FirstOrDefault(r =>
        r.ReservationTime.Date <= selectedEndDate && r.EndTime.Date >= DateTime.Today && r.UserId == userId);

        if (overlappingReservation != null)
        {
            // 如果是当前用户的预约，则取消
            await CancelReservation(overlappingReservation.Id);
        }
        else if (!IsReservedForSelectedDate(seat))
        {
            // 如果未预约，则进行预约
            try
            {
                await ReservationService.ReserveSeatAsync(seat.Id, userId, selectedEndDate);
                await LoadDataAsync();
            }
            catch (Exception ex)
            {
                Console.WriteLine($"预约座位失败: {ex.Message}");
            }
        }
    }

    private async Task ReserveSeat()
    {
        // 查找第一个未预约的座位
        if (seats != null)
        {
            var availableSeat = seats.FirstOrDefault(s => !IsReservedForSelectedDate(s));
            if (availableSeat != null)
            {
                await ToggleSeatReservation(availableSeat);
            }
        }
    }

    private async Task CancelReservation(int reservationId)
    {
        try
        {
            await ReservationService.CancelReservationAsync(reservationId, userId);
            await LoadDataAsync();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"取消预约失败: {ex.Message}");
        }
    }
}
